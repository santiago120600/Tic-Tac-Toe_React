{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onClickEvent","value","Board","initialSquares","Array","fill","useState","squares","setSquares","xIsNext","setXIsNext","renderSquare","i","newSquares","handleClickEvent","winner","row1","slice","row2","row3","myFunction","row","col1","col2","col3","forEach","calculateWinner","status","style","backgroundColor","margin","padding","Game","ReactDom","render","document","getElementById"],"mappings":"4LAKMA,G,MAAS,SAACC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,aAA1C,SACGH,EAAMI,UAKPC,EAAQ,WACZ,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MADnB,EAGWC,mBAASH,GAHpB,mBAGXI,EAHW,KAGHC,EAHG,OAIYF,oBAAS,GAJrB,mBAIVG,EAJU,KAIFC,EAJE,KAYZC,EAAe,SAACC,GACpB,OACE,cAAChB,EAAD,CAAQK,MAAOM,EAAQK,GACrBZ,aAAc,kBATK,SAACY,GACxB,IAAMC,EAAU,YAAON,GACvBM,EAAWD,GAAKH,EAAU,IAAM,IAChCD,EAAWK,GACXH,GAAYD,GAKUK,CAAiBF,OAKnCG,EA2BR,SAAyBR,GAEvB,IAAIS,EAAOT,EAAQU,MAAM,EAAE,GACvBC,EAAOX,EAAQU,MAAM,EAAE,GACvBE,EAAOZ,EAAQU,MAAM,EAAE,GAI3B,SAASG,EAAWC,GAClB,IAAIC,EAAOD,EAAI,GACXE,EAAOF,EAAI,GACXG,EAAOH,EAAI,GACf,GAAIC,GAAQA,IAASC,GAAQA,IAASC,EACpC,MAAa,MAATF,EACK,IAEA,IAXA,CAACN,EAAKE,EAAKC,GAEjBM,QAAQL,GAlCAM,CAAgBnB,GACzBoB,EAASZ,EAAM,kBACVA,GADU,uBAELN,EAAU,IAAM,KAEhC,OACE,sBAAKmB,MAAO,CAACC,gBAAiB,UAAUC,OAAO,GAAGC,QAAQ,IAA1D,UACE,qBAAKjC,UAAU,SAAf,SAAyB6B,IACzB,sBAAK7B,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,UAMlDqB,EAAO,WACX,OAAQ,sBAAKlC,UAAU,OAAf,yBAAkC,cAACI,EAAD,QAG5C+B,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,W","file":"static/js/main.5df1f4cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\n// importar estilos\nimport './index.css';\n\nconst Square = (props) => {\n  return ( \n    <button className=\"square\" onClick={props.onClickEvent}>\n      {props.value}\n    </button>\n  );\n};\n\nconst Board = () => {\n  const initialSquares = Array(9).fill(null);\n\n  const [squares,setSquares] = useState(initialSquares);\n  const [ xIsNext,setXIsNext] = useState(true);\n\n  const handleClickEvent = (i) =>{\n    const newSquares = [...squares];\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n  const renderSquare = (i) =>{\n    return ( \n      <Square value={squares[i]}\n        onClickEvent={()=>handleClickEvent(i)}\n      />\n    );\n  };\n\n  const winner = calculateWinner(squares);\n  const status = winner ?\n  `winner: ${winner}` :\n  `Next player: ${xIsNext ? 'X' : 'O'}`;\n\n  return (\n    <div style={{backgroundColor: 'skyblue',margin:10,padding:10}}>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}{renderSquare(1)}{renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}{renderSquare(4)}{renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}{renderSquare(7)}{renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n\nconst Game = () => {\n  return (<div className=\"game\"> Tic-Tac-Toe<Board/></div>);\n};\n\nReactDom.render(<Game />,document.getElementById('root'));\n\nfunction calculateWinner(squares){  \n  // dividir en 3 listas\n  var row1 = squares.slice(0,3);\n  var row2 = squares.slice(3,6);\n  var row3 = squares.slice(6,9);\n  var matrix = [row1,row2,row3];\n\n  matrix.forEach(myFunction);\n  function myFunction(row){\n    var col1 = row[0];\n    var col2 = row[1];\n    var col3 = row[2];\n    if (col1 && col1 === col2 && col2 === col3) {\n      if (col1 === 'O'){\n        return 'O';\n      }else{\n        return 'X';\n      }\n\n    }\n  }\n}"],"sourceRoot":""}