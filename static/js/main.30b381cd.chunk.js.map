{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onClickEvent","value","Board","initialSquares","Array","fill","useState","squares","setSquares","xIsNext","setXIsNext","renderSquare","i","newSquares","winnerDeclared","Boolean","calculateWinner","squareFilled","handleClickEvent","winner","status","style","backgroundColor","margin","padding","Game","winning_combos","length","winning_row","p1","p2","p3","ReactDom","render","document","getElementById"],"mappings":"4LAKMA,G,MAAS,SAACC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,aAA1C,SACGH,EAAMI,UAKPC,EAAQ,WACZ,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MADnB,EAGWC,mBAASH,GAHpB,mBAGXI,EAHW,KAGHC,EAHG,OAIYF,oBAAS,GAJrB,mBAIVG,EAJU,KAIFC,EAJE,KAmBZC,EAAe,SAACC,GACpB,OACE,cAAChB,EAAD,CAAQK,MAAOM,EAAQK,GACrBZ,aAAc,kBAhBK,SAACY,GACxB,IAAMC,EAAU,YAAON,GAEjBO,EAAiBC,QAAQC,EAAgBH,IACzCI,EAAeF,QAAQF,EAAWD,IACpCE,GAAkBG,IAItBJ,EAAWD,GAAKH,EAAU,IAAM,IAChCD,EAAWK,GACXH,GAAYD,IAKUS,CAAiBN,OAKnCO,EAASH,EAAgBT,GACzBa,EAASD,EAAM,kBACVA,GADU,uBAELV,EAAU,IAAM,KAEhC,OACE,sBAAKY,MAAO,CAACC,gBAAiB,UAAUC,OAAO,GAAGC,QAAQ,IAA1D,UACE,qBAAK1B,UAAU,SAAf,SAAyBsB,IACzB,sBAAKtB,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,UAMlDc,EAAO,WACX,OAAQ,sBAAK3B,UAAU,OAAf,yBAAkC,cAACI,EAAD,QAK5C,SAASc,EAAgBT,GAWxB,IAVA,IAAImB,EAAiB,CACpB,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEEd,EAAE,EAAGA,EAAEc,EAAeC,OAAQf,IAAI,CACzC,IAAIgB,EAAcF,EAAed,GAC7BiB,EAAKD,EAAY,GACjBE,EAAKF,EAAY,GACjBG,EAAKH,EAAY,GAErB,GAAIrB,EAAQsB,IAAOtB,EAAQsB,IAAKtB,EAAQuB,IAAOvB,EAAQuB,IAAKvB,EAAQwB,IAAOxB,EAAQwB,IAAKxB,EAAQsB,GAE9F,OAAOtB,EAAQsB,IArBnBG,IAASC,OAAO,cAACR,EAAD,IAASS,SAASC,eAAe,W","file":"static/js/main.30b381cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\n// importar estilos\nimport './index.css';\n\nconst Square = (props) => {\n  return ( \n    <button className=\"square\" onClick={props.onClickEvent}>\n      {props.value}\n    </button>\n  );\n};\n\nconst Board = () => {\n  const initialSquares = Array(9).fill(null);\n\n  const [squares,setSquares] = useState(initialSquares);\n  const [ xIsNext,setXIsNext] = useState(true);\n\n  const handleClickEvent = (i) =>{\n    const newSquares = [...squares];\n\n    const winnerDeclared = Boolean(calculateWinner(newSquares));\n    const squareFilled = Boolean(newSquares[i]);\n    if (winnerDeclared || squareFilled) {\n      return;\n    }\n\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n  const renderSquare = (i) =>{\n    return ( \n      <Square value={squares[i]}\n        onClickEvent={()=>handleClickEvent(i)}\n      />\n    );\n  };\n\n  const winner = calculateWinner(squares);\n  const status = winner ?\n  `winner: ${winner}` :\n  `Next player: ${xIsNext ? 'X' : 'O'}`;\n\n  return (\n    <div style={{backgroundColor: 'skyblue',margin:10,padding:10}}>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}{renderSquare(1)}{renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}{renderSquare(4)}{renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}{renderSquare(7)}{renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n\nconst Game = () => {\n  return (<div className=\"game\"> Tic-Tac-Toe<Board/></div>);\n};\n\nReactDom.render(<Game />,document.getElementById('root'));\n\nfunction calculateWinner(squares){  \n let winning_combos = [\n  [0,1,2],\n  [3,4,5],\n  [6,7,8],\n  [0,3,6],\n  [1,4,7],\n  [2,5,8],\n  [0,4,8],\n  [2,4,6]\n ]\n for(let i=0; i<winning_combos.length; i++){\n  let winning_row = winning_combos[i]\n  let p1 = winning_row[0]\n  let p2 = winning_row[1]\n  let p3 = winning_row[2]\n  \n  if (squares[p1] && squares[p1]==squares[p2] && squares[p2]==squares[p3] && squares[p3]==squares[p1]) {\n    // alert(`winner! player  ${squares[p1]} has won the game`);\n    return squares[p1];\n  }\n\n }\n}"],"sourceRoot":""}